<%= content_for :add_js do %>
  <%= javascript_include_tag "iox/cloud/cloud_containers" %>
<% end %>
<%= content_for :add_css do %>
  <%= stylesheet_link_tag "iox/cloud/cloud_containers", media: "all" %>
<% end %>

<div class="iox-sidebar">

  <!--<div class="iox-sidebar-arrow"></div>-->
  <div class="iox-sidebar-frame">

    <div class="iox-tree-control">
      <form>
        <input type="text" name="query" placeholder="<%= t('filter_results') %> " />
        <input type="submit" value="<%= t('search') %>" />
        <a href="#" data-tree-role="search" title="<%= t('filter_results') %>"><i class="icon-search"></i></a>
        <a href="#" data-tree-role="refresh" title="<%= t('refresh') %>"><i class="icon-refresh"></i></a>
        <a href="#" class="btn btn-success" data-tree-role="new" title="<%= t('cloud_container.new') %>"><i class="icon-plus"></i></a>
      </form>
    </div>

    <ul id="iox-content-list"></ul>

  </div>

</div>

<div class="iox-content offset-sidebar">
  <div class="iox-content-frame hide">
    <div id="iox-content-details" class="iox-form" data-bind="template: { name: 'iox-content-form-template' }">
    </div>
  </div>
  <div class="iox-details-placeholder">
    <i class="icon-info-sign"></i>
    <%= t('webpages.click_on_webpage_to_show_details') %>
  </div>
</div>

<%= render partial: 'form' %>

<script id="iox-tree-item-template" type="text/html">
  <li data-bind=" attr: { 'data-id': id, id: 'item_'+id }, click: markItem">
    <div class="item clearfix" data-bind=" css: { selected: _selected, hide: _hide }">
      <div class="actions">
        <!-- ko if: access() < <%= Iox::AccessibleLinks::Rules::PRIVATE %> -->
        <span class="icon-unlock" title="<%= t('cloud_container.is_public') %>"></span>
        <!-- /ko -->
        <!-- ko if: access() === <%= Iox:: AccessibleLinks::Rules::PRIVATE %> -->
        <span class="icon-lock" title="<%= t('cloud_container.is_private') %>"></span>
        <!-- /ko -->
      </div>
      <a class="title" data-bind="click: listContent, attr: { title: name }, text: name"></a>
      &nbsp;&nbsp;<span class="desc" data-bind="text: access_expires() ? moment(access_expires()).format('YYYY-MM-DD') : ''"></span>
    </div>
  </li>
</script>

<script type="text/javascript">

  $(document).ready( function(){

    $('#iox-content-list').ioxTree({
      url: '/iox/cloud_containers',
      observe: ['name', 'access', 'access_expires'],
      control: $('.iox-tree-control'),
      i18n:{
        noEntriesFound: '<%= t('filter_no_entries_found') %>'
      },
      events: {
        afterRemove: function afterRemove( item ){
          $('.iox-details-placeholder').show();
          $('.iox-content-frame').hide();
        },
        item: {

          /**
           * lists content of this item in a grid
           */
          listContent: function listContent( item, e ){
            console.log('list content');
          },

          /*
           * show the webpage form (depending on the webpage's template)
           * for editing existing webpages
           */
          showForm: function showForm( item, e ){
            $('.iox-details-placeholder').hide();
            $('.iox-content-frame').show();
            setupItemForm( item );
          },

          /**
           * save an existing webpage
           */
          saveItemForm: function saveItemForm( form ){
            var self = this;
            if( this._validator.validate() ){
              $('.iox-content-frame').block();
              $.ajax({ url: self._master.options.url+'/'+self.id, data: $(form).serializeArray(), dataType: 'json', type: 'put'
              }).done( function( json ){
                $('.iox-content-frame').unblock();
                iox.flash.rails( json.flash );
              });
            } else {
              iox.flash.notice('<%= t('please_fill_out_all_fields') %>');
              return false;
            }
          },

          /**
           * create a new item
           */
          createItemForm: function createItemForm( form ){
            var TreeItem = this.constructor;
            var self = this;
            if( this._validator.validate() ){
              $('.iox-content-frame').block();
              $.ajax({ url: self._master.options.url, data: $(form).serializeArray(), dataType: 'json', type: 'post' }).done( function( json ){
                $('.iox-content-frame').unblock();
                if( json.success ){
                  var item = new TreeItem( json.item, self._master );
                  if( item.parent_id ){
                    var $parentLi = $(self._master.obj).find('li[data-id='+item.parent_id+']');
                    var parent = ko.dataFor($parentLi.get(0));
                    if( $parentLi.find('.open-folder').length ){
                      if( $parentLi.find('.open-folder').length && $parentLi.find('.open-folder').hasClass('open') )
                        parent.children.push( item );
                      else
                        $parentLi.find('.open-folder').click();
                    } else{
                      $parentLi.find('.folder-spacer').addClass('open-folder').click();
                    }
                  } else
                    self._master.items.push( item );
                  setupItemForm( item );
                }
                iox.flash.rails( json.flash );
              });
            } else {
              iox.flash.notice('<%= t('please_fill_out_all_fields') %>');
              return false;
            }
          },

        },
        tree: {

          /**
           * load a new item (by asking for json object from
           * server). this gives opportunities to set default
           * values at application level
           */
          newItemForm: function newItem( e, tree, TreeItem ){
            var self = this;
            $('.iox-details-placeholder').show().block();
            $('.iox-content-frame').hide();
            $(this).block({ message: iox.loaderHorizontal });
            $.getJSON( tree.options.url+'/new' ).done( function( json ){
              $('.iox-details-placeholder').unblock().hide();
              $('.iox-content-frame').show();
              var item = new TreeItem(json, tree);
              if( tree._selectedItem )
                item._parent( tree._selectedItem );
              setupItemForm( item );
              $('#iox-content-details input[type=text]:first').focus();
              $(self).unblock();
            });
          }

        }

      }
    });


    function setupItemForm( item ){
      ko.cleanNode($('#iox-content-details').get(0));
      $('#iox-content-details').html('');
      ko.applyBindings( item, $('#iox-content-details').get(0) );
      item._validator = $("#iox-content-details").kendoValidator().data("kendoValidator");
      $(".datepicker").kendoDatePicker({ format: 'yyyy-MM-dd'}).on('click', function(){
        $(this).data("kendoDatePicker").open();
      });
      $('#iox-content-details .iox-tabs').ioxTabs();
      if( item.id && item.id > 0 )
        setupFilesTable( item );
    }

    function setupFilesTable( item ){

      var kGrid = $('#iox-content-details .files-grid').kendoGrid({
        columns: [
          { field: "name", title: "<%= t('cloud_container.filename') %>" },
          { field: 'content_type', title: '<%= t('cloud_container.content_type') %>',
            width: 80 },
          { field: 'filesize', title: '<%= t('cloud_container.filesize') %>',
            width: 120,
            attributes: {
              style: 'text-align: right'
            }
          },
          { field: 'updated_at',
            title: '<%= t('updated_at') %>',
            format: '{0:dd.MM.yyyy HH:mm}',
            width: 120,
            attributes: {
              style: 'text-align: right'
            }
          },
          { command:
            [
              { name: 'edit' },
              { name: 'destroy' }
            ],
            width: 160
          }
        ],
        dataSource: {
          type: "json",
          transport: {
            read: {
              url: '/iox/cloud_containers/'+item.id+'/repos',
              dataType: 'json',
              data: function(){
                return {};
              }
            },
            update: {
              url: '/iox/cloud_containers/'+item.id+'/repos/x',
              dataType: 'json',
              type: 'patch'
            },
            destroy: {
              url: '/iox/cloud_containers/'+item.id+'/repos/x',
              type: 'delete',
              dataType: 'json'
            }
          },
          schema: {
            total: 'total',
            data: function(response) {
              return response.items;
            },
            model: {
              fields: {
                id: { type: 'string' },
                name: { type: 'string' },
                content_type: { type: 'string', editable: false },
                filesize: { type: 'number', editable: false },
                path: { type: 'string', editable: false },
                absolute_path: { type: 'string', editable: false },
                updated_at: { type: 'date', editable: false }
              }
            }
          },
          serverPaging: true,
          serverFiltering: true,
          serverSorting: true,
          sort: { field: "name", dir: "asc" }
        },
        height: $(window).height()-170,
        selectable: "multiple",
        resizable: true,
        navigatable: true,
        sortable: true,
        editable: "inline",
        pageable: {
          refresh: true,
          pageSize: 30,
          pageSizes: [10, 30, 50, 100]
        }
      });

      $('#upload-file').fileupload({
        url: '/iox/cloud_containers/'+item.id+'/repos',
        dataType: 'json',
        formData: {
          "authenticity_token": $('input[name="authenticity_token"]:first').val()
        },
        dragover: function( e ){
          $(this).closest('.select-files').addClass('drop-here');
        },
        done: function (e, data) {
          var file = data._response.result;
          var self = this;
          setTimeout( function(){
            $(self).closest('.select-files').find('.progress').hide();
            $(self).closest('.select-files').find('.progress .bar').css( 'width', 0 );
            $(self).closest('.select-files').find('.progress-num').fadeOut();
            $('#upload-file').show();
          }, 1000 );
          // reload dataSource
          kGrid.data('kendoGrid').dataSource.read();
        },
        fail: function( response, type, msg ){
          console.log( response, type, msg );
          iox.flash.alert( JSON.parse(response.responseText).errors.file[0] );
        },
        submit: function( e, data ){
          $('#upload-file').hide();
          $(self).closest('.select-files').find('.progress').show();
          $(this).closest('.select-files').find('.progress-num').fadeIn();
        },
        progressall: function (e, data) {
          var progress = parseInt(data.loaded / data.total * 100, 10);
          $(this).closest('.select-files').find('.progress-num').text( progress + '%' );
          $(this).closest('.select-files').find('.progress .bar').css( 'width', progress + '%' );
        }
      });

    }



  });

</script>